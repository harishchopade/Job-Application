spring.application.name=jobapplication

# H2 Database Connection
    # spring.h2.console.enabled=true
    # spring.datasource.url=jdbc:h2:mem:jobApplication
    # spring.jpa.show-sql = true
    # spring.jpa.hibernate.ddl-auto = create-drop

# PostgreSQL Database Connection
    # spring.datasource.url=jdbc:postgresql://localhost:5432/Job
    # spring.datasource.username=mydb
    # spring.datasource.password=root
    # spring.jpa.hibernate.ddl-auto=create-drop

    spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
    spring.datasource.username=postgres
    spring.datasource.password=root
    spring.jpa.hibernate.ddl-auto=update

    spring.datasource.driver-class-name=org.postgresql.Driver
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Actuators
    # Below line will display all the actuators on web screen as we are doing for testing so we visible all the actuators
    management.endpoints.web.exposure.include=*     

    # Health Actuator
    management.endpoint.health.show-details=always     

    # Info actuator
    info.app.name = JobApplication
    info.app.description = JobApplication For Finding Jobs Built By Hash
    info.app.version = 1.0.0

    management.info.env.enabled = true

    # Shutdown
        # Shutdown actuator is by default disabled for security measures 
        # If we need to enaled it we need to add below line
    management.endpoint.Shutdown.enabled = true
    # When you stop the application, Spring Boot waits for ongoing HTTP requests to finish before shutting down the server.
    # 
    Server.shutdown = graceful
